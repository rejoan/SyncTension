{"version":3,"file":"main.js","mappings":";;AAAA;AACA;AACA;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://chrapi-extension/webpack/bootstrap","webpack://chrapi-extension/webpack/runtime/make namespace object","webpack://chrapi-extension/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import axios from \"axios\";\n/*\nconst api = \"https://sandbox8.trackableresponse.dev/api/ledgers\";\n$('.loading,.errors').hide();\n\nconst form = document.querySelector(\".form-data\");\nconst form2 = document.querySelector(\".redeem-form\");\n\nconst search = document.querySelector(\".search\");\n/*\nwindow.onload = function() {\n   axios.get(api, {\n  }).then(function (response) {\n\t//if (localStorage.getItem('ledgerObj') === null) {\n\t  localStorage.setItem('ledgerObj',JSON.stringify(response.data));\n\t//}\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\n// declare a method to search for API data\nconst searchForBusiness = async (e) => {\n\t$('.loading').slideDown();\n\t$('.errors,#balance-form').hide();\n\tvar results = [];\n\tvar searchField = \"user\";\n\tvar searchVal = search.value;\n\tvar ledgerG = localStorage.getItem('ledgerObj');\n\tvar aData = JSON.parse(ledgerG);\n\tvar table = '<table class=\"table table-bordered mt-2\"><thead><tr><th scope=\"col\">User</th><th scope=\"col\">Balance</th><th scope=\"col\">GameRoom</th></tr></thead><tbody>';\n\tfor (var i=0 ; i < aData.length; i++){\n\t\tvar username = aData[i].user;\n\t\tvar addCondition = true;\n\t\tif(e.submitter.defaultValue == 'Search'){\n\t\t\taddCondition = (aData[i][searchField] == searchVal);\n\t\t\tusername = '<a class=\"redeem-user\" href=\"#\" data-userid=\"'+aData[i].id+'\" data-username=\"'+username+'\" data-amount=\"'+aData[i].amount+'\">'+username+'</a>';\n\t\t}\n\t\tif(e.submitter.defaultValue == 'Show All'){\n\t\t\t$('.search').val('');\n\t\t}\n\t\tif (addCondition) {\n\t\t\ttable += '<tr><td>'+username+'</td><td>'+aData[i].amount+'</td><td>'+aData[i].gameroom+'</td></tr>';\n\t\t}\n\t}\n\t\n\ttable += '</tbody></table>';\n\t$('#result-container').html(table);\n\t$('.loading').slideUp();\n\t$('td:empty').remove();\n\tif($('tbody tr').length < 1){\n\t\t$('tbody').html('<tr><td colspan=\"3\">No Data</td></tr>');\n\t}\n};\n\n$('body').on('click','a.redeem-user',function(){\n\tvar username = $(this).attr('data-username');\n\tvar amount = $(this).attr('data-amount');\n\tvar userID = $(this).attr('data-userid');\n\t$('#result-container').empty();\n\t$('#balance-form').removeClass('d-none').slideDown();\n\t$('#username').val(username);\n\t$('#amount').val(amount);\n\t$('#userID').val(userID);\n});\n\nconst redeemForm = async (e) => {\n\t$('#balance-form .update-btn').attr('disabled',true);\n\t$('#balance-form .updating').removeClass('d-none');\n  try {\n\t\tvar userID = $('#userID').val();\n\t\tvar redeem = $('#redeem').val();\n\t\tlet config = {\n\t\t\ttimeout:7000,\n\t\t\t//headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n\t\t\t//params: {'r': redeem\t}\n\t\t}\n\t\tconst response = await axios.post(api+'/update/'+userID+'/'+redeem,config);\n\t\tif(response.data.message == 'updated'){\n\t\t\tvar ledgerG = localStorage.getItem('ledgerObj');\n\t\t\tvar aData = JSON.parse(ledgerG);\n\t\t\taData = aData.filter(function(obj) {\n\t\t\t\treturn obj.id !== response.data.id;\n\t\t\t});\n\t\t\tlocalStorage.setItem('ledgerObj',JSON.stringify(aData));\n\t\t\t$('#balance-form').addClass('d-none');\n\t\t\t$('#result-container').html('<p class=\"text-success\">Update Done</p>');\n\t\t}else{\n\t\t\t$('#result-container').append('<p class=\"text-info\">'+response.data.message+'</p>');\n\t\t\treturn false;\n\t\t}\n\t\t$('#balance-form .update-btn').attr('disabled',false);\n\t\t$('#balance-form .updating').addClass('d-none');\n\t\t\n  } catch (error) {\n\tif(error.response.data.message){\n\t\terror = error.response.data.message;\n\t}\t\n\t$('#balance-form .update-btn').attr('disabled',false);\n\t$('#balance-form .updating').addClass('d-none');\n    $('#result-container').append('<p class=\"text-info\">'+error+'</p>');\n  }\n};\n\nconst handleSubmit = async e => {\n  e.preventDefault();\n  searchForBusiness(e);\n};\n\nform.addEventListener(\"submit\", e => handleSubmit(e));\n\nconst handleSubmit2 = async e => {\n  e.preventDefault();\n  redeemForm(e);\n};\n\nform2.addEventListener(\"submit\", e => handleSubmit2(e));\n*/"],"names":[],"sourceRoot":""}